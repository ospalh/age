#!/usr/bin/env python3
# -*- coding: utf-8 ; mode: python -*-
#
#  © Copyright 2016 Roland Sieker <ospalh@gmail.com>
#
# License: GNU AGPL, version 3 or later;
#  http://www.gnu.org/licenses/agpl.html

"""Rename files to get rid of the  1L or 2R

Rename files mathing a given pattern so that ScanTailor’s 1L, 2R – or 1R, 2L –
bit of the file name is removed and the main numbering is (ideally)
without gaps.
"""


import argparse
import glob
import shutil
import os
import re
import sys

__version__ = '0.0.1'


def un_one_two(args, one_two):
    gl_list = glob.glob(
        args.prefix + '[0-9][0-9][0-9]_' + str(one_two) + '[LR]' +
        args.suffix)
    for in_file in gl_list:
        num = re.sub('^' + args.prefix , '', in_file)
        num = re.sub('_[12][LR]' + args.suffix + '$', '', num)
        num = int(num)
        out_file = '{p}{n:03}{s}'.format(
                p=args.prefix, n=(num + one_two - 1), s=args.suffix)
        # print("moving “{}” → “{}”".format(in_file, out_file))
        shutil.move(in_file, out_file)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description="""Rename files to get rid of the  1L or 2R""")
    parser.add_argument(
        '--prefix', type=str,
        help='''Bit of file name before the number''')
    parser.add_argument(
        '--suffix', type=str,
        help='''Bit of file name after the number''')
    args = parser.parse_args()
    un_one_two(args, 1)
    un_one_two(args, 2)
