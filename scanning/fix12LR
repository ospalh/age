#!/usr/bin/env python3
# -*- coding: utf-8 ; mode: python -*-
#
#  © Copyright 2016–2020 Roland Sieker <ospalh@gmail.com>
#
# License: GNU AGPL, version 3 or later;
#  http://www.gnu.org/licenses/agpl.html

"""Rename files to get rid of the  1L or 2R

Rename files mathing a given pattern so that ScanTailor’s 1L, 2R – or 1R, 2L –
bit of the file name is removed and the main numbering is (ideally)
without gaps.
"""


import argparse
import glob
import shutil
import os
import re
import sys

__version__ = '0.1.0'


def fix12LR(args):
    if args.prefix:
        glob_prefix = args.prefix
        re_prefix = re.escape(args.prefix)
    else:
        glob_prefix = '*'
        re_prefix = '.*'
    gl_list = glob.glob(
        glob_prefix + '[0-9]' * args.digits + '_[12][LR]' +
        args.suffix)
    fn_re = re.compile(
        '('+ re_prefix + r')(\d{' + str(args.digits) + r'})_([12])[LR]' +
        re.escape(args.suffix), re.IGNORECASE)
    for in_file in gl_list:
        fn_bits = re.search(fn_re, in_file)
        try:
            num = int(fn_bits.group(2)) + int(fn_bits.group(3)) - 1
        except (ValueError, AttributeError):
            print('File name “{i}” doesn’t fit our pattern.'.format(i=in_file),
                  file=sys.stderr)
            continue
        out_file = '{p}{n:03}{s}'.format(
            p=fn_bits.group(1), n=num, s=args.suffix)
        print("moving “{}” → “{}”".format(in_file, out_file))
        if not os.path.exists(out_file):
            shutil.move(in_file, out_file)
        else:
            print('Keeping “{i}”, “{o}” alredy exists'.format(
                i=in_file, o=out_file), file=sys.stderr)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description="""Rename files to get rid of the  _1L or _2R""")
    parser.add_argument(
        '-p', '--prefix', type=str,
        help='''Bit of file name before the number''')
    parser.add_argument(
        '-s', '--suffix', type=str, default='.tif',
        help='''Bit of file name after the number''')
    parser.add_argument(
        '-d', '--digits', type=int, default=3,
        help='''How many digits in the page number''')
    args = parser.parse_args()
    fix12LR(args)
